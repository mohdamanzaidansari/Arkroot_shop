import 'dart:convert';

import 'package:arkroot_shop/models/product.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter/material.dart';

class Products with ChangeNotifier {
  List<Product> _items = [];

  List<Product> get items {
    return [..._items];
  }

  Product? getProductById(String id) {
    List<Product?> items = [..._items];
    return items.firstWhere(
      (product) => product?.id == id,
      orElse: () => null,
    );
  }

  Future<void> addProduct(Product newProduct) async {
    final savedProduct = Product(
      id: DateTime.now()
          .toString(), // Dummy id,Real ids will be generated by backend after submission to backend.
      title: newProduct.title,
      description: newProduct.description,
      price: newProduct.price,
      image: newProduct.image,
      variants: newProduct.variants,
    );
    _items.add(savedProduct);
    print('Added Product: ${jsonEncode(savedProduct.toJson())}');
    notifyListeners();
  }

  Future<void> updateProduct(String id, Product product) async {
    final prodIndex = _items.indexWhere((prod) => prod.id == id);
    if (prodIndex >= 0) {
      _items[prodIndex] = product;
      notifyListeners();
      print('Added Product: ${jsonEncode(product.toJson())}');
    }
  }

  Future<void> removeProduct(String id) async {
    _items.removeWhere((prod) => prod.id == id);
    notifyListeners();
  }
}
